"use strict";(self.webpackChunkrts_docs_dev=self.webpackChunkrts_docs_dev||[]).push([["459"],{36982:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>r,default:()=>d,contentTitle:()=>a,assets:()=>l,toc:()=>h,metadata:()=>o});var o=JSON.parse('{"id":"hpc/tutorial_intro_shell_hpc/connecting_to_hpc","title":"Connecting to the remote HPC system Greene","description":"-   How do I open a terminal?","source":"@site/docs/hpc/13_tutorial_intro_shell_hpc/02_connecting_to_hpc.mdx","sourceDirName":"hpc/13_tutorial_intro_shell_hpc","slug":"/hpc/tutorial_intro_shell_hpc/connecting_to_hpc","permalink":"/rts-docs-dev/pr-preview/pr-113/docs/hpc/tutorial_intro_shell_hpc/connecting_to_hpc","draft":false,"unlisted":false,"editUrl":"https://github.com/NYU-ITS/rts-docs-dev/blob/main/docs/hpc/13_tutorial_intro_shell_hpc/02_connecting_to_hpc.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"hpcSidebar","previous":{"title":"Introduction to Using the Shell on Greene","permalink":"/rts-docs-dev/pr-preview/pr-113/docs/hpc/tutorial_intro_shell_hpc/intro"},"next":{"title":"Moving around and looking at things","permalink":"/rts-docs-dev/pr-preview/pr-113/docs/hpc/tutorial_intro_shell_hpc/moving_looking"}}'),i=t(74132),s=t(25998);let r={},a="Connecting to the remote HPC system Greene",l={},h=[{value:"Remote Connections with the NYU VPN &amp; HPC Gateway Server",id:"remote-connections-with-the-nyu-vpn--hpc-gateway-server",level:2},{value:"Connect to the NYU VPN",id:"connect-to-the-nyu-vpn",level:2},{value:"Log into the Greene Cluster",id:"log-into-the-greene-cluster",level:2},{value:"Inside the NYU network (non-Windows)",id:"inside-the-nyu-network-non-windows",level:3},{value:"Outside the NYU network (non-Windows)",id:"outside-the-nyu-network-non-windows",level:3},{value:"From Windows",id:"from-windows",level:3},{value:"Opening a Terminal",id:"opening-a-terminal",level:2},{value:"Linux",id:"linux",level:3},{value:"Mac",id:"mac",level:3},{value:"Windows",id:"windows",level:3},{value:"Git BASH",id:"git-bash",level:4},{value:"Windows Subsystem for Linux",id:"windows-subsystem-for-linux",level:4},{value:"MobaXterm",id:"mobaxterm",level:4},{value:"PuTTY",id:"putty",level:4},{value:"Open OnDemand (Web-based Graphical User Interface)",id:"open-ondemand-web-based-graphical-user-interface",level:2},{value:"Access the Shell",id:"access-the-shell",level:3},{value:"Interactive Applications",id:"interactive-applications",level:3},{value:"Troubleshooting Connections to Open OnDemand",id:"troubleshooting-connections-to-open-ondemand",level:3},{value:"Creating an SSH key (optional)",id:"creating-an-ssh-key-optional",level:2},{value:"Windows",id:"windows-1",level:3},{value:"Linux, Mac and Windows Subsystem for Linux",id:"linux-mac-and-windows-subsystem-for-linux",level:3},{value:"Modifying your .ssh/config file",id:"modifying-your-sshconfig-file",level:2},{value:"Logging onto the system",id:"logging-onto-the-system",level:2},{value:"Telling the Difference between the Local Terminal and the Remote Terminal",id:"telling-the-difference-between-the-local-terminal-and-the-remote-terminal",level:3},{value:"Being certain which system your terminal is connected to",id:"being-certain-which-system-your-terminal-is-connected-to",level:3},{value:"Keep two terminal windows open",id:"keep-two-terminal-windows-open",level:3}];function c(e){let n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"connecting-to-the-remote-hpc-system-greene",children:"Connecting to the remote HPC system Greene"})}),"\n",(0,i.jsx)(n.admonition,{title:"Questions",type:"info",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"How do I open a terminal?"}),"\n",(0,i.jsx)(n.li,{children:"How do I connect to a remote computer?"}),"\n",(0,i.jsx)(n.li,{children:"What is an SSH key?"}),"\n"]})}),"\n",(0,i.jsx)(n.admonition,{title:"Objectives",type:"tip",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Connect to a remote HPC system."}),"\n"]})}),"\n",(0,i.jsx)(n.admonition,{title:"Prerequisites",type:"warning",children:(0,i.jsx)(n.p,{children:"To access the Greene HPC cluster, you must be connected to the NYU network. If you are physically on campus and connected via a wired connection in your office or through NYU\u2019s WiFi, you can directly SSH into the clusters without any additional steps. However, if you are off-campus or working remotely, connecting through the NYU VPN or using the gateway servers is required to establish a secure connection to the HPC systems."})}),"\n",(0,i.jsx)(n.h2,{id:"remote-connections-with-the-nyu-vpn--hpc-gateway-server",children:"Remote Connections with the NYU VPN & HPC Gateway Server"}),"\n",(0,i.jsx)(n.p,{children:"If you are connecting from a remote location that is not on the NYU network (your home for example), you have two options:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"VPN Option"}),": set up your computer to use the NYU VPN. Once you\u2019ve created a VPN connection, you can proceed as if you were connected to the NYU net."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Gateway Option"}),": go through our gateway servers (example below). Gateways are designed to support only a very minimal set of commands and their only purpose is to let users connect to HPC systems without needing to first connect to the VPN."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"connect-to-the-nyu-vpn",children:"Connect to the NYU VPN"}),"\n",(0,i.jsxs)(n.p,{children:["To connect to VPN, please see the ",(0,i.jsx)(n.a,{href:"https://www.nyu.edu/life/information-technology/infrastructure/network-services/vpn.html",children:"NYU instructions"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"log-into-the-greene-cluster",children:"Log into the Greene Cluster"}),"\n",(0,i.jsx)(n.h3,{id:"inside-the-nyu-network-non-windows",children:"Inside the NYU network (non-Windows)"}),"\n",(0,i.jsx)(n.p,{children:"From within the NYU network, that is, from an on-campus location, or after you VPN inside NYU\u2019s network, you can log in to the HPC clusters directly. You do not need to log in to the gateway host."}),"\n",(0,i.jsx)(n.p,{children:"To log in to the HPC cluster (Greene), simply use:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"ssh <NetID>@greene.hpc.nyu.edu\n"})}),"\n",(0,i.jsx)(n.h3,{id:"outside-the-nyu-network-non-windows",children:"Outside the NYU network (non-Windows)"}),"\n",(0,i.jsx)(n.p,{children:"From an off-campus location (outside NYU-NET), logging in to the HPC clusters is a two-step process:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["log in to the gateway host, ",(0,i.jsx)(n.code,{children:"gw.hpc.nyu.edu"}),". From a Mac or Linux workstation, this is a simple terminal command (replace ",(0,i.jsx)(n.code,{children:"<NetID>"})," with your NetID). Your password is the same password you use for NYU Home:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"ssh <NetID>@gw.hpc.nyu.edu\n"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"log in to the cluster. For Greene, this is done with:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"ssh <NetID>@greene.hpc.nyu.edu\n"})}),"\n",(0,i.jsx)(n.h3,{id:"from-windows",children:"From Windows"}),"\n",(0,i.jsxs)(n.p,{children:["Windows users will need to use PuTTY, please see the ",(0,i.jsx)(n.a,{href:"https://www.nyu.edu/employees/resources-and-services/media-and-communications/digital-communications/web-guide/website-development/tutorials/making-your-initial-connection/connecting-with-putty.html",children:"NYU instructions"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"opening-a-terminal",children:"Opening a Terminal"}),"\n",(0,i.jsx)(n.p,{children:"Accessing the Greene HPC cluster is primarily done through the Command Line Interface (CLI). A CLI provides a text-based environment that allows users to manage files, run programs, and navigate directories via command input. On macOS, the built-in CLI tool is Terminal, while Windows 10 users can leverage the Windows Subsystem for Linux (WSL) for similar functionality. Additionally, a popular tool for connecting to Linux servers from Windows is PuTTY, a free SSH client."}),"\n",(0,i.jsx)(n.p,{children:"Connecting to an HPC system is most often done through a tool known as \u201CSSH\u201D (Secure SHell) and usually SSH is run through a terminal. So, to begin using an HPC system we need to begin by opening a terminal. Different operating systems have different terminals, none of which are exactly the same in terms of their features and abilities while working on the operating system. When connected to the remote system the experience between terminals will be identical as each will faithfully present the same experience of using that system."}),"\n",(0,i.jsx)(n.p,{children:"Here is the process for opening a terminal in each operating system."}),"\n",(0,i.jsx)(n.h3,{id:"linux",children:"Linux"}),"\n",(0,i.jsx)(n.p,{children:"There are many different versions (aka \u201Cflavours\u201D) of Linux and how to open a terminal window can change between flavours. Fortunately most Linux users already know how to open a terminal window since it is a common part of the workflow for Linux users. If this is something that you do not know how to do then a quick search on the Internet for \u201Chow to open a terminal window in\u201D with your particular Linux flavour appended to the end should quickly give you the directions you need."}),"\n",(0,i.jsx)(n.p,{children:"To connect to the gateway servers, simply open a terminal application and enter the following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"ssh <NetID>@gw.hpc.nyu.edu\n"})}),"\n",(0,i.jsx)(n.p,{children:"After typing in your password you will be logged in to the cluster. Once this connection is established, you can make one more hop and connect to one of the HPC clusters:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# this will connect you to Greene HPC cluster\nssh <NetID>@greene.hpc.nyu.edu\n"})}),"\n",(0,i.jsx)(n.h3,{id:"mac",children:"Mac"}),"\n",(0,i.jsx)(n.p,{children:"Macs have had a terminal built in since the first version of OS X, since it is built on a UNIX-like operating system, leveraging many parts from BSD (Berkeley Software Distribution). The terminal can be quickly opened through the use of the Searchlight tool. Hold down the command key and press the spacebar. In the search bar that shows up type \u201Cterminal\u201D, choose the terminal app from the list of results (it will look like a tiny, black computer screen) and you will be presented with a terminal window. Alternatively, you can find Terminal under \u201CUtilities\u201D in the Applications menu in the Finder."}),"\n",(0,i.jsx)(n.p,{children:"To connect to the gateway servers, simply open a terminal application and enter the following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"ssh <NetID>@gw.hpc.nyu.edu\n"})}),"\n",(0,i.jsx)(n.p,{children:"After typing in your password you will be logged in to the cluster. Once this connection is established, you can make one more hop and connect to Greene:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# this will connect you to Greene HPC cluster\nssh <NetID>@greene.hpc.nyu.edu\n"})}),"\n",(0,i.jsx)(n.h3,{id:"windows",children:"Windows"}),"\n",(0,i.jsx)(n.p,{children:"While Windows does have a command-line interface known as the \u201CCommand Prompt\u201D that has its roots in MS-DOS (Microsoft Disk Operating System) it does not have an SSH tool built into it and so one needs to be installed. There are a variety of programs that can be used for this; a few common ones we describe here, as follows:"}),"\n",(0,i.jsx)(n.h4,{id:"git-bash",children:"Git BASH"}),"\n",(0,i.jsxs)(n.p,{children:["Git BASH gives you a terminal like interface in Windows. You can use this to connect to a remote computer via SSH. It can be downloaded for free from ",(0,i.jsx)(n.a,{href:"https://gitforwindows.org/",children:"Git for Windows"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"windows-subsystem-for-linux",children:"Windows Subsystem for Linux"}),"\n",(0,i.jsxs)(n.p,{children:["The Windows Subsystem for Linux also allows you to connect to a remote computer via SSH. Please see the instructions from ",(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/windows/wsl/install",children:"Microsoft"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"mobaxterm",children:"MobaXterm"}),"\n",(0,i.jsxs)(n.p,{children:["MobaXterm is a terminal window emulator for Windows and the home edition can be downloaded for free from ",(0,i.jsx)(n.a,{href:"https://mobatek.net",children:"mobatek.net"}),". If you follow the link you will note that there are two editions of the home version available: Portable and Installer. The portable edition puts all MobaXterm content in a folder on the desktop (or anywhere else you would like it) so that it is easy to add plug-ins or remove the software. The installer edition adds MobaXterm to your Windows installation and menu as any other program you might install. If you are not sure that you will continue to use MobaXterm in the future, the portable edition is likely the best choice for you."]}),"\n",(0,i.jsxs)(n.p,{children:["If you use MobaXterm you can use MobaKeyGen to manage your ssh keys.  Please see the MoabXterm ",(0,i.jsx)(n.a,{href:"https://mobaxterm.mobatek.net/documentation.html",children:"documentation"})," for details."]}),"\n",(0,i.jsx)(n.p,{children:"Download the version that you would like to use and install it as you would any other software on your Windows installation. Once the software is installed you can run it by either opening the folder installed with the portable edition and double-clicking on the executable file named MobaXterm_Personal_11.1 (your version number may vary) or, if the installer edition was used, finding the executable through either the start menu or the Windows search option."}),"\n",(0,i.jsx)(n.p,{children:"Once the MobaXterm window is open you should see a large button in the middle of that window with the text \u201CStart Local Terminal\u201D. Click this button and you will have a terminal window at your disposal."}),"\n",(0,i.jsx)(n.h4,{id:"putty",children:"PuTTY"}),"\n",(0,i.jsx)(n.p,{children:"It is strictly speaking not necessary to have a terminal running on your local computer in order to access and use a remote system, only a window into the remote system once connected. PuTTY is likely the oldest, most well-known, and widely used software solution to take this approach."}),"\n",(0,i.jsxs)(n.p,{children:["PuTTY is available for ",(0,i.jsx)(n.a,{href:"https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html",children:"free download"}),". Download the version that is correct for your operating system and install it as you would other software on your Windows system. Once installed it will be available through the start menu or similar."]}),"\n",(0,i.jsxs)(n.p,{children:["You can use puttygen to create ssh keys if you are using PuTTY.  Please see the ",(0,i.jsx)(n.a,{href:"https://www.chiark.greenend.org.uk/~sgtatham/putty/docs.html",children:"puttygen page"})," in the ",(0,i.jsx)(n.a,{href:"https://the.earth.li/~sgtatham/putty/0.83/htmldoc/",children:"PuTTY documentation"})," for details."]}),"\n",(0,i.jsx)(n.p,{children:"Running PuTTY will not initially produce a terminal but instead a window full of connection options. Putting the address of the remote system in the \u201CHost Name (or IP Address)\u201D box and either pressing enter or clicking the \u201COpen\u201D button should begin the connection process."}),"\n",(0,i.jsx)(n.p,{children:"If this works you will see a terminal window open that prompts you for a username through the \u201Clogin as:\u201D prompt and then for a password. If both of these are passed correctly then you will be given access to the system and will see a message saying so within the terminal. If you need to escape the authentication process you can hold the Control (Ctrl) key and press the c key to exit and start again."}),"\n",(0,i.jsx)(n.p,{children:"Note that you may want to paste in your password rather than typing it. Use Ctrl plus a right-click of the mouse to paste content from the clipboard to the PuTTY terminal."}),"\n",(0,i.jsx)(n.p,{children:"For those logging in with PuTTY it would likely be best to cover the terminal basics already mentioned above before moving on to navigating the remote system."}),"\n",(0,i.jsx)(n.h2,{id:"open-ondemand-web-based-graphical-user-interface",children:"Open OnDemand (Web-based Graphical User Interface)"}),"\n",(0,i.jsx)(n.p,{children:"Open OnDemand (OOD) is an open source project funded by the National Science Foundation (NSF). OOD is designed to create easier access for users to interface with HPC systems. Originally developed by Ohio Supercomputer Center (OSC), used by many universities around the world, and now servicing the NYU Greene HPC cluster."}),"\n",(0,i.jsx)(n.p,{children:"OOD has a variety of convenient tools to manage files, access the command line, manage and monitor jobs, and launch interactive applications, such as Jupyter Notebooks, RStudio sessions, and even full Linux Desktops."}),"\n",(0,i.jsx)(n.p,{children:"Features Include:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Easy file management - upload and download files, view HTML and pictures without downloading"}),"\n",(0,i.jsx)(n.li,{children:"Command-line shell access without any SSH client locally installed"}),"\n",(0,i.jsx)(n.li,{children:"Job management and monitoring"}),"\n",(0,i.jsx)(n.li,{children:"Full Linux desktop experience without X11"}),"\n",(0,i.jsx)(n.li,{children:"Interactive Apps such as JupyterHub and RStudio without the need for port forwarding"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"OOD is accessible to all users with a valid NYU HPC account while on-campus network or through a VPN."}),"\n",(0,i.jsxs)(n.p,{children:["To access OOD visit: ",(0,i.jsx)(n.a,{href:"https://ood.hpc.nyu.edu",children:"https://ood.hpc.nyu.edu"})," (VPN Required)"]}),"\n",(0,i.jsx)(n.h3,{id:"access-the-shell",children:"Access the Shell"}),"\n",(0,i.jsx)(n.p,{children:"Under the clusters menu you can select the Greene Shell Access option to access the Linux shell. No local SSH client is required."}),"\n",(0,i.jsx)(n.h3,{id:"interactive-applications",children:"Interactive Applications"}),"\n",(0,i.jsx)(n.p,{children:"GUI based applications are accessible without the need for port or X11 forwarding. Select the Interactive Apps menu, select the desired application, and submit the job based on required resources and options."}),"\n",(0,i.jsx)(n.h3,{id:"troubleshooting-connections-to-open-ondemand",children:"Troubleshooting Connections to Open OnDemand"}),"\n",(0,i.jsxs)(n.p,{children:["A common issue that can occur is receiving an error that the Open OnDemand page cannot be reached. Sometimes this can indicate that the service is down, but often this is an issue with the the local browser cache. You can test this by opening a private browser window and seeing if ",(0,i.jsx)(n.a,{href:"https://ood.hpc.nyu.edu",children:"https://ood.hpc.nyu.edu"})," will load. If it does, try deleting the cache for ",(0,i.jsx)(n.a,{href:"https://ood.hpc.nyu.edu",children:"https://ood.hpc.nyu.edu"})," in your browser history to resolve this issue."]}),"\n",(0,i.jsx)(n.p,{children:"In Chrome, this can be done by navigating to this page in your settings:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"chrome://settings/content/all?searchSubpage=ood.hpc.nyu.edu&search=site+data",children:"chrome://settings/content/all?searchSubpage=ood.hpc.nyu.edu&search=site+data"})}),"\n",(0,i.jsx)(n.p,{children:"The link above will automatically search for the Open OnDemand site data and cookies. You can then simply click on the trashcan icon to delete the site cache."}),"\n",(0,i.jsxs)(n.p,{children:["Once done, try navigating again to ",(0,i.jsx)(n.a,{href:"https://ood.hpc.nyu.edu",children:"https://ood.hpc.nyu.edu"})," and the site should load. For other issues please email ",(0,i.jsx)(n.a,{href:"mailto:hpc@nyu.edu",children:"hpc@nyu.edu"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"creating-an-ssh-key-optional",children:"Creating an SSH key (optional)"}),"\n",(0,i.jsx)(n.p,{children:"SSH keys are an alternative method for authentication to obtain access to remote computing systems. They can also be used for authentication when transferring files or for accessing version control systems. In this section you will create a pair of SSH keys, a private key which you keep on your own computer and a public key which is placed on the remote HPC system that you will log into."}),"\n",(0,i.jsx)(n.h3,{id:"windows-1",children:"Windows"}),"\n",(0,i.jsxs)(n.p,{children:["We mentioned methods for creating SSH keys using some of the ",(0,i.jsx)(n.a,{href:"#windows",children:"Windows SSH options above"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"linux-mac-and-windows-subsystem-for-linux",children:"Linux, Mac and Windows Subsystem for Linux"}),"\n",(0,i.jsxs)(n.p,{children:["Once you have opened a terminal check for existing SSH keys and filenames since existing SSH keys could be overwritten by the following command if the filename is the same.  If you already have a key with the name given after the ",(0,i.jsx)(n.code,{children:"-f"})," option you will need to change the filename to keep from losing your existing file."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"$ ls ~/.ssh/\n"})}),"\n",(0,i.jsx)(n.p,{children:"then generate a new public-private key pair:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"$ ssh-keygen -o -a 100 -t rsa -b 4096 -f ~/.ssh/id_Greene_rsa\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"-o"})," (no default): use the OpenSSH key format, rather than PEM."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"-a"})," (default is 16): number of rounds of passphrase derivation; increase to slow down brute force attacks."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"-t"})," (default is rsa): specify the \u201Ctype\u201D or cryptographic algorithm."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"-b"})," (default is 2048): sets the number of bits in the key."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"-f"})," (default is /home/user/.ssh/id_algorithm): filename to store your keys. If you already have SSH keys, make sure you specify a different name: ssh-keygen will overwrite the default key if you don\u2019t specify!"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"When prompted, enter a strong password that you will remember. Cryptography is only as good as the weakest link, and this will be used to connect to a powerful, precious, computational resource."}),"\n",(0,i.jsxs)(n.p,{children:["Take a look in ",(0,i.jsx)(n.code,{children:"~/.ssh"})," (use ",(0,i.jsx)(n.code,{children:"ls ~/.ssh"}),"). You should see the two new files: your private key (",(0,i.jsx)(n.code,{children:"~/.ssh/key_Greene_rsa"}),") and the public key (",(0,i.jsx)(n.code,{children:"~/.ssh/key_Greene_rsa.pub"}),"). If a key is requested by the system administrators, the ",(0,i.jsx)(n.em,{children:"public"})," key is the one to provide."]}),"\n",(0,i.jsxs)(n.admonition,{type:"danger",children:[(0,i.jsx)(n.p,{children:"Private keys are your private identity"}),(0,i.jsx)(n.p,{children:"A private key that is visible to anyone but you should be considered compromised, and must be destroyed. This includes having improper permissions on the directory it (or a copy) is stored in, traversing any network in the clear, attachment on unencrypted email, and even displaying the key (which is ASCII text) in your terminal window."}),(0,i.jsx)(n.p,{children:"Protect this key as if it unlocks your front door. In many ways, it does."})]}),"\n",(0,i.jsx)(n.admonition,{title:"Further information",type:"tip",children:(0,i.jsxs)(n.p,{children:["For more information on SSH security and some of the flags set here, an excellent resource is ",(0,i.jsx)(n.a,{href:"https://blog.stribik.technology/2015/01/04/secure-secure-shell.html",children:"Secure Secure Shell"}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"modifying-your-sshconfig-file",children:"Modifying your .ssh/config file"}),"\n",(0,i.jsxs)(n.p,{children:["Please add the following lines to your ",(0,i.jsx)(n.code,{children:"~/.ssh/config"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Host greene.hpc.nyu.edu dtn.hpc.nyu.edu gw.hpc.nyu.edu\n  StrictHostKeyChecking no\n  ServerAliveInterval 60\n  ForwardAgent yes\n  UserKnownHostsFile /dev/null\n  LogLevel ERROR\n\nHost hpcgwtunnel\n  HostName gw.hpc.nyu.edu\n  ForwardX11 no\n  StrictHostKeyChecking no\n  LocalForward 8027 greene.hpc.nyu.edu:22\n  UserKnownHostsFile /dev/null\n  User <Your NetID>\n\nHost greene\n  HostName localhost\n  Port 8027\n  ForwardX11 yes\n  StrictHostKeyChecking no\n  UserKnownHostsFile /dev/null\n  LogLevel ERROR\n  User <Your NetID>\n"})}),"\n",(0,i.jsxs)(n.p,{children:["You'll need to replace the sections above labelled ",(0,i.jsx)(n.code,{children:"<Your NetID>"})," with your NetID.  You can find more details about this at the ",(0,i.jsx)(n.a,{href:"https://sites.google.com/nyu.edu/nyu-hpc/accessing-hpc#h.7t97br4zzvip",children:"Quickstart section of Accessing HPC at NYU"})]}),"\n",(0,i.jsx)(n.h2,{id:"logging-onto-the-system",children:"Logging onto the system"}),"\n",(0,i.jsxs)(n.p,{children:["With all of this in mind, let\u2019s connect to our remote HPC system. In this tutorial, we will connect to Greene \u2014 an HPC system located at New York University. Although it\u2019s unlikely that every system will be exactly like Greene, it\u2019s a very good example of what you can expect from an HPC installation. To connect to Greene we will use SSH (if you are using PuTTY see ",(0,i.jsx)(n.a,{href:"/rts-docs-dev/pr-preview/pr-113/docs/hpc/tutorial_intro_shell_hpc/connecting_to_hpc#opening-a-terminal",children:"details above"}),")."]}),"\n",(0,i.jsx)(n.p,{children:"SSH allows us to connect to UNIX computers remotely, and use them as if they were our own. The general syntax of the connection command follows the format:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"ssh yourUsername@some.computer.address\n"})}),"\n",(0,i.jsx)(n.p,{children:"Let\u2019s attempt to connect to the HPC system now:"}),"\n",(0,i.jsx)(n.p,{children:"If you'd like to connect without typing your password you'll need to copy your public key file to greene first:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"scp ~/.ssh/id_Greene_rsa.pub <NetID>@greene.hpc.nyu.edu:/home/<NetID>/.ssh/authorized_keys\n"})}),"\n",(0,i.jsx)(n.p,{children:"If you are on NYU WiFi or VPN you can connect directly with:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"ssh <NetID>@greene.hpc.nyu.edu\n"})}),"\n",(0,i.jsx)(n.p,{children:"otherwise, you'll need to go through the NYU gateway first:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"ssh <NetID>@gw.hpc.nyu.edu\nssh <NetID>@greene.hpc.nyu.edu\n"})}),"\n",(0,i.jsx)(n.p,{children:"When you are logged in you will see information about your last login, the host you've connected to, and your storage quota.  It should look something like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"Last login: Fri May  9 09:45:18 2025 from 0.0.0.0\n\nHostname: log-1 at Mon May 12 10:48:19 EDT 2025\n\nFilesystem   Environment   Backed up?   Allocation       Current Usage\nSpace        Variable      /Flushed?    Space / Files    Space(%) / Files(%)\n\n/home        $HOME         Yes/No       50.0GB/30.0K      23.74GB(47.48%)/4913(16.38%)\n/scratch     $SCRATCH      No/Yes        5.0TB/1.0M      35.91GB(0.70%)/19585(1.96%)\n/archive     $ARCHIVE      Yes/No        2.0TB/20.0K       0.00GB(0.00%)/1(0.00%)\n/vast        $VAST         NO/YES        2TB/5.0M           0.0TB(0.0%)/2(0%)\n\n[NetID@log-1 ~]$\n"})}),"\n",(0,i.jsxs)(n.p,{children:["By looking at the information after ",(0,i.jsx)(n.em,{children:"Hostname:"})," and in the prompt you'll notice that the machine you're currently logged into is not Greene.  This is expected.  You've just logged into a ",(0,i.jsx)(n.em,{children:"login node"})," that is connected to Greene.  It is from the login nodes that you will submit jobs to Greene."]}),"\n",(0,i.jsx)(n.p,{children:"If you logged in using PuTTY this will not apply because it does not offer a local terminal."}),"\n",(0,i.jsx)(n.h3,{id:"telling-the-difference-between-the-local-terminal-and-the-remote-terminal",children:"Telling the Difference between the Local Terminal and the Remote Terminal"}),"\n",(0,i.jsxs)(n.p,{children:["You can see that the prompt has changed after you log into a remote system.  Let's take a closer look at the prompt after login: ",(0,i.jsx)(n.code,{children:"[NetID@log-1 ~]$"})," (in this example) tells us that we are logged into the login node ",(0,i.jsx)(n.code,{children:"log-1"})," with the identity ",(0,i.jsx)(n.code,{children:"NetID"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["This change presents a small complication that we will need to navigate throughout this workshop. Exactly what is reported before the ",(0,i.jsx)(n.code,{children:"$"})," in the terminal when it is connected to the local system and the remote system will typically be different for every user. We still need to indicate which system we are entering commands on though so we will adopt the following convention:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"[local]$"})," when the command is to be entered on a terminal connected to your local computer"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"[NetID@glogin-1 ~]$"})," when the command is to be entered on a terminal connected to the remote system"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"$"})," when it really doesn\u2019t matter which system the terminal is connected to"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"being-certain-which-system-your-terminal-is-connected-to",children:"Being certain which system your terminal is connected to"}),"\n",(0,i.jsx)(n.p,{children:"If you ever need to be certain which system a terminal you are using is connected to then use the following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"$ hostname\n"})}),"\n",(0,i.jsx)(n.h3,{id:"keep-two-terminal-windows-open",children:"Keep two terminal windows open"}),"\n",(0,i.jsxs)(n.p,{children:["It is strongly recommended that you have two terminals open, one connected to the local system and one connected to the remote system that you can switch back and forth between. If you only use one terminal window then you will need to reconnect to the remote system using one of the methods above when you see a change from ",(0,i.jsx)(n.code,{children:"[local]$"})," to ",(0,i.jsx)(n.code,{children:"[NetID@login-1 ~]$"})," and disconnect when you see the reverse."]})]})}function d(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},25998:function(e,n,t){t.d(n,{Z:()=>a,a:()=>r});var o=t(39546);let i={},s=o.createContext(i);function r(e){let n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);