"use strict";(self.webpackChunkrts_docs_dev=self.webpackChunkrts_docs_dev||[]).push([["7696"],{87023:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>o,default:()=>g,contentTitle:()=>d,assets:()=>s,toc:()=>u,metadata:()=>r});var r=JSON.parse('{"id":"genai/how_to_guides/retrieval_augmented_generation","title":"Retrieval-augmented generation","description":"Large Language Models only know about the data they were trained upon and do not have the context needed to be effective at answering questions based on","source":"@site/docs/genai/04_how_to_guides/03_retrieval_augmented_generation.mdx","sourceDirName":"genai/04_how_to_guides","slug":"/genai/how_to_guides/retrieval_augmented_generation","permalink":"/rts-docs-dev/pr-preview/pr-117/docs/genai/how_to_guides/retrieval_augmented_generation","draft":false,"unlisted":false,"editUrl":"https://github.com/NYU-ITS/rts-docs-dev/blob/main/docs/genai/04_how_to_guides/03_retrieval_augmented_generation.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"genaiSidebar","previous":{"title":"Embeddings","permalink":"/rts-docs-dev/pr-preview/pr-117/docs/genai/how_to_guides/embeddings"}}'),a=t(74132),i=t(25998);let o={},d="Retrieval-augmented generation",s={},u=[];function l(e){let n={h1:"h1",header:"header",li:"li",mermaid:"mermaid",p:"p",ul:"ul",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"retrieval-augmented-generation",children:"Retrieval-augmented generation"})}),"\n",(0,a.jsx)(n.p,{children:"Large Language Models only know about the data they were trained upon and do not have the context needed to be effective at answering questions based on"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"private datasets"}),"\n",(0,a.jsx)(n.li,{children:"newer knowledge past the cutoff date (i.e. the date at which data collection was frozen)"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"To get around this issue, one of the most popular techniques is Retrieval-augmented generation."}),"\n",(0,a.jsx)(n.mermaid,{value:'flowchart LR;\n    A["Natual language prompt <br> *Can GenAI be used for research?*"]\n    B["Vector embedding <br> [0.052587852, 0.094195396, 0.24439038, 0.104940414, ...]"]\n    C["Vector Database <br> embedding1 <br> embedding2 <br> embedding3 <br> ... "]\n    D["Text with embeddings similar to the prompt"]\n    E["Original prompt with added context"]\n    F["Response from LLM using context"]\n    subgraph Retreival\n    direction TB\n    A-- "Embedding" --\x3eB;\n    B-- "Look for similar embeddings" --\x3eC;\n    C-- "Generate context" --\x3eD;\n    end\n    D-- "With expanded prompt" --\x3eE;    \n    subgraph Augmented Generation\n    direction TB\n    E-- "LLM" --\x3eF;\n    end'})]})}function g(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},25998:function(e,n,t){t.d(n,{Z:()=>d,a:()=>o});var r=t(39546);let a={},i=r.createContext(a);function o(e){let n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);