"use strict";(self.webpackChunkrts_docs_dev=self.webpackChunkrts_docs_dev||[]).push([["5426"],{25383:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>r,toc:()=>o,default:()=>h,metadata:()=>t,assets:()=>l,contentTitle:()=>c});var t=JSON.parse('{"id":"hpc/containers/squash_file_system_and_singularity","title":"Squash File System and Singularity","description":"View available datasets on the Datasets page.","source":"@site/docs/hpc/07_containers/04_squash_file_system_and_singularity.md","sourceDirName":"hpc/07_containers","slug":"/hpc/containers/squash_file_system_and_singularity","permalink":"/docs/hpc/containers/squash_file_system_and_singularity","draft":false,"unlisted":false,"editUrl":"https://github.com/NYU-RTS/rts-docs/blob/main/docs/hpc/07_containers/04_squash_file_system_and_singularity.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"hpcSidebar","previous":{"title":"Singularity with Conda","permalink":"/docs/hpc/containers/singularity_with_conda"},"next":{"title":"Machine Learning on HPC","permalink":"/docs/hpc/ml_ai_hpc/intro"}}'),a=s(47259),i=s(55511);let r={},c="Squash File System and Singularity",l={},o=[{value:"Working with Datasets",id:"working-with-datasets",level:2}];function d(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"squash-file-system-and-singularity",children:"Squash File System and Singularity"})}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["View available datasets on the ",(0,a.jsx)(n.a,{href:"/docs/hpc/datasets/intro",children:"Datasets page"}),"."]})}),"\n",(0,a.jsx)(n.h2,{id:"working-with-datasets",children:"Working with Datasets"}),"\n",(0,a.jsxs)(n.p,{children:["Writable ext3 overlay images have conda environments installed inside, Singularity can work with squashFS for fixed datasets, such as the coco datasets.  Here's an example using the ",(0,a.jsx)(n.code,{children:"my_pytorch.ext3"})," we created in the last tutorial ",(0,a.jsx)(n.a,{href:"/docs/hpc/containers/singularity_with_conda",children:"Singularity with Conda"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"[NetID@log-1 ~]$ singularity exec \\\n--overlay /scratch/<NetID>/pytorch-example/pytorch1.8.0-cuda11.1.ext3:ro \\\n--overlay /scratch/work/public/ml-datasets/coco/coco-2014.sqf:ro \\\n--overlay /scratch/work/public/ml-datasets/coco/coco-2015.sqf:ro \\\n--overlay /scratch/work/public/ml-datasets/coco/coco-2017.sqf:ro \\\n/scratch/work/public/singularity/cuda11.1-cudnn8-devel-ubuntu18.04.sif /bin/bash\n"})}),"\n",(0,a.jsx)(n.p,{children:"If you have many tiny files as fixed datasets, please make squashFS files to work with Singularity. Here is an example:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Make a temporary folder in /state/partition1, it is a folder in local hard drive on each computer node"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"[NetID@log-3 NetID]$ srun --pty /bin/bash\nsrun: job 62890341 queued and waiting for resources\nsrun: job 62890341 has been allocated resources\n[NetID@cm002 NetID]$ mkdir -p /state/partition1/<NetID>\n[NetID@cm002 NetID]$ cd /state/partition1/<NetID>\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsx)(n.li,{children:"Unzip files there, for example"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"[NetID@cm002 NetID]$ tar -vxzf /scratch/work/public/examples/squashfs/imagenet-example.tar.gz\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"3",children:["\n",(0,a.jsx)(n.li,{children:"Change access permissions in case we'll share files with others"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"[NetID@cm002 NetID]$ find imagenet-example -type d -exec chmod 755 {} \\;\n[NetID@cm002 NetID]$ find imagenet-example -type f -exec chmod 644 {} \\;\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"4",children:["\n",(0,a.jsx)(n.li,{children:"Convert to a single squashFS file on host"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"[NetID@cm002 NetID]$ mksquashfs imagenet-example imagenet-example.sqf  -keep-as-directory\n"})}),"\n",(0,a.jsxs)(n.p,{children:["For more details on working with squashFS, please see ",(0,a.jsx)(n.a,{href:"http://www.iitk.ac.in/LDP/HOWTO/SquashFS-HOWTO/mksqoverview.html",children:"details from SquashFS documentation"}),"."]}),"\n",(0,a.jsxs)(n.ol,{start:"5",children:["\n",(0,a.jsx)(n.li,{children:"Copy this file to /scratch"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"[NetID@cm002 NetID]$ cp -rp /state/partition1/<NetID>/imagenet-example.sqf /scratch/<NetID>/.\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"6",children:["\n",(0,a.jsxs)(n.li,{children:["To test, files are in ",(0,a.jsx)(n.code,{children:"/imagenet-example"})," inside Singularity container:"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"[NetID@cm002 NetID]$ singularity exec --overlay /scratch/<NetID>/imagenet-example.sqf:ro /scratch/work/public/singularity/ubuntu-20.04.1.sif /bin/bash\nSingularity> find /imagenet-example | wc -l\n1303\nSingularity> find /state/partition1/<NetID>/imagenet-example | wc -l\n1303\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"7",children:["\n",(0,a.jsx)(n.li,{children:"To delete the tempoary folder on host"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"[NetID@cm002 NetID]$ rm -rf /state/partition1/<NetID>\n"})})]})}function h(e={}){let{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},55511:function(e,n,s){s.d(n,{R:()=>r,x:()=>c});var t=s(96363);let a={},i=t.createContext(a);function r(e){let n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);